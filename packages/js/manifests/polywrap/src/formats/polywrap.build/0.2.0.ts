/* eslint-disable @typescript-eslint/naming-convention */
/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface BuildManifest {
  /**
   * Polywrap build manifest format version.
   */
  format: "0.2.0" | "0.2";
  /**
   * Custom build image configurations.
   */
  strategies?: {
    image?: Image;
    local?: Local;
    vm?: Vm;
  };
  /**
   * Custom build image configurations.
   */
  config?: {
    [k: string]: unknown;
  };
  /**
   * Locally linked packages into docker build image.
   */
  linked_packages?: {
    /**
     * Package name.
     */
    name: string;
    /**
     * Path to linked package directory.
     */
    path: string;
    /**
     * Ignore files matching this regex in linked package directory.
     */
    filter?: string;
  }[];
  __type: "BuildManifest";
}
/**
 * Docker image strategy configuration
 */
export interface Image {
  /**
   * Docker image name.
   */
  name?: string;
  /**
   * Docker image file name.
   */
  dockerfile?: string;
  /**
   * Configuration options for Docker Buildx, set to true for default value.
   */
  buildx?:
    | {
        /**
         * Path to cache directory, set to true for default value, set to false to disable caching.
         */
        cache?: string | boolean;
        /**
         * Remove the builder instance.
         */
        removeBuilder?: boolean;
      }
    | boolean;
  /**
   * Remove the image.
   */
  removeImage?: boolean;
}
/**
 * Local build strategy configuration
 */
export interface Local {
  assemblyscript?: LocalAssemblyscript;
  rust?: LocalRust;
}
/**
 * Local strategy configuration for Assemblyscript
 */
export interface LocalAssemblyscript {
  /**
   * Custom script path for local Assemblyscript build
   */
  scriptPath?: string;
}
/**
 * Local strategy configuration for Rust
 */
export interface LocalRust {
  /**
   * Custom script path for local Rust build
   */
  scriptPath?: string;
}
/**
 * Docker VM strategy configuration
 */
export interface Vm {
  assemblyscript?: VmAssemblyscript;
  rust?: VmRust;
}
/**
 * Docker VM strategy configuration for Assemblyscript
 */
export interface VmAssemblyscript {
  /**
   * Base image for the Assemblyscript VM
   */
  baseImage?: string;
  /**
   * Files to include in build VM container, by default
   */
  defaultIncludes?: string[];
}
/**
 * Docker VM strategy configuration for Rust
 */
export interface VmRust {
  /**
   * Base image for the Rust VM
   */
  baseImage?: string;
  /**
   * Files to include in build VM container, by default
   */
  defaultIncludes?: string[];
}
